# Saved: D:\Boards\RRH Clock\RRH-Clock\Programming\7Oct.txt at Mon Oct 07 15:11:13 2024
# The comments below are the steps for implementing glitchless device programming.
# The function block("0==LOL_PLLx",timeout_seconds = 1) polls the status of the APLLs to determine if they are locked, max 1 s.
# During this time, TICS Pro usage is blocked.
# The function block("0==LOL_PLLx",timeout_seconds = 1) can be replaced with open_loop_delay(seconds=1) to delay for 1 s
# This is as opposed to checking the APLL lock status.

# Step 1: Set all outputs to static low to ensure that there are no glitches at startup.
# Set OUT0 to static low.
0x03c234 # OUT0 L
0x03c322 # OUT0 Static DC
# Set OUT1 to static low.
0x03c534 # OUT1 L
0x03c622 # OUT1 Static DC
# Set OUT2 to static low.
0x040102 # OUT2 Static DC
# Set OUT3 to static low.
0x042102 # OUT3 Static DC
# Set OUT4 to static low.
0x04420a # OUT4 L & OUT4 Static DC
# Set OUT5 to static low.
0x04440a # OUT5 L & OUT5 Static DC
# Set OUT6 to static low.
0x04620a # OUT6 L & OUT6 Static DC
# Set OUT7 to static low.
0x04640a # OUT7 L & OUT7 Static DC
# Set OUT8 to static low.
0x04820a # OUT8 L & OUT8 Static DC
# Set OUT9 to static low.
0x04840a # OUT9 L & OUT9 Static DC
# Set OUT10 to static low.
0x04a20a # OUT10 L & OUT10 Static DC
# Set OUT11 to static low.
0x04a40a # OUT11 L & OUT11 Static DC
# Set OUT12 to static low.
0x04c20a # OUT12 L & OUT12 Static DC
# Set OUT13 to static low.
0x04c40a # OUT13 L & OUT13 Static DC
# Set OUT14 to static low.
0x04e102 # OUT14 Static DC
# Set OUT15 to static low.
0x050102 # OUT15 Static DC
# Finished setting all outputs to static low.

# Step 2: Write all of the registers to the device EXCEPT for those that do the following:
# 	1. Change the outputs from static low to a different state
# 	2. Change the state of SYNC_EN or SYNC_SW
# 	3. Change the state of SWRST
# These registers have already been excluded from register generation via commenting.
0x001300
0x001400
0x001637
0x001806
0x001A01
0x002000
0x002500
0x002620
0x0027FF
0x002820
0x002900
0x002A00
0x002B00
0x002C00
0x003102
0x003600
0x003700
0x003800
0x00390C
0x003A0F
0x003B0E
0x003C14
0x003D14
0x003E00
0x003F08
0x00400F
0x004338
0x004438
0x004600
0x004B1A
0x004C1A
0x004D1A
0x004E00
0x004F18
0x005018
0x0053AA
0x00541F
0x0055FF
0x0056FF
0x00571F
0x0058FF
0x0059FF
0x006000
0x00611F
0x0062FF
0x0063FF
0x00641F
0x0065FF
0x0066FF
0x006D00
0x006E0E
0x006F00
0x007014
0x007100
0x00720E
0x007300
0x007414
0x007D07
0x007E53
0x007F00
0x008000
0x008100
0x008203
0x00830D
0x00844C
0x008507
0x008653
0x008700
0x008800
0x008900
0x008A03
0x008B0D
0x008C4C
0x009D10
0x009E10
0x00A13F
0x00A2FF
0x00A33F
0x00A4FF
0x00DF11
0x00E100
0x00E209
0x00E480
0x00E50A
0x00E600
0x00E764
0x00E800
0x00E909
0x00EA27
0x00EBC0
0x00EC00
0x00ED00
0x00EE00
0x00EF01
0x00F003
0x00F11A
0x00F2BA
0x00F385
0x00F7D5
0x00F842
0x00F9B4
0x00FA00
0x00FB00
0x00FC00
0x00FD00
0x00FE00
0x00FF00
0x010000
0x010100
0x010200
0x010300
0x010400
0x010502
0x010695
0x010702
0x0108F9
0x010900
0x010A00
0x010B00
0x010C00
0x010D00
0x010E18
0x010F19
0x011019
0x011105
0x011200
0x011300
0x011400
0x011508
0x011600
0x011700
0x011800
0x011911
0x011A07
0x011B05
0x011C17
0x011D64
0x011E01
0x011F22
0x012001
0x012185
0x012203
0x012309
0x012401
0x012592
0x01260D
0x012742
0x012801
0x012940
0x012A00
0x012B0A
0x012C3E
0x012D0A
0x012E08
0x012F12
0x013014
0x013107
0x01323F
0x01330F
0x01343F
0x013500
0x013A00
0x013B95
0x013C02
0x013DF9
0x013E00
0x013F00
0x014000
0x014100
0x014200
0x014300
0x014400
0x014500
0x014600
0x014700
0x014800
0x014900
0x014A00
0x014B00
0x014C0F
0x014DA0
0x014E00
0x014F00
0x015000
0x015100
0x015200
0x0153FF
0x0154FF
0x0155FF
0x0156FF
0x0157FF
0x015800
0x015902
0x015A00
0x015B00
0x015C00
0x015D00
0x015E00
0x015F00
0x016000
0x01660C
0x016700
0x016801
0x016900
0x016A01
0x016F00
0x017000
0x017100
0x017200
0x017500
0x017700
0x017801
0x017A00
0x017B0A
0x017C00
0x017D64
0x017E00
0x017F00
0x018009
0x0181C5
0x018200
0x018327
0x018475
0x018503
0x018600
0x018798
0x018896
0x018982
0x018D55
0x018E6E
0x018F48
0x019000
0x019100
0x019200
0x019300
0x019400
0x019500
0x019600
0x019700
0x019800
0x019900
0x019A00
0x019B03
0x019C00
0x019D00
0x019E01
0x019FD0
0x01A007
0x01A100
0x01A200
0x01A300
0x01A40A
0x01A50E
0x01A60A
0x01A708
0x01A80D
0x01A908
0x01AA0D
0x01AB08
0x01AC0A
0x01AD09
0x01AE0A
0x01AF11
0x01B010
0x01B108
0x01B242
0x01B32E
0x01B400
0x01B573
0x01B601
0x01B785
0x01B803
0x01B909
0x01BA01
0x01BB92
0x01BC0D
0x01BD42
0x01BE01
0x01BF40
0x01C000
0x01C10A
0x01C214
0x01C308
0x01C408
0x01C520
0x01C622
0x01C707
0x01C83F
0x01C90F
0x01CA3F
0x01CB00
0x01D000
0x01D100
0x01D200
0x01D300
0x01D4E8
0x01D508
0x01D600
0x01D700
0x01D800
0x01D900
0x01DA00
0x01DB00
0x01DC00
0x01DD00
0x01DE00
0x01DF00
0x01E000
0x01E100
0x01E212
0x01E3C0
0x01E400
0x01E500
0x01E600
0x01E700
0x01E800
0x01E900
0x01EA00
0x01EB00
0x01EC00
0x01ED00
0x01EE00
0x01EF02
0x01F000
0x01F19D
0x01F2A3
0x01F383
0x01F441
0x01F501
0x01F600
0x01FC00
0x01FD00
0x01FE01
0x01FF00
0x020001
0x020500
0x020600
0x020700
0x020800
0x020B11
0x020D00
0x020E09
0x021080
0x02110A
0x021200
0x021364
0x021400
0x021503
0x02160D
0x021740
0x021800
0x021900
0x021A00
0x021B01
0x021C03
0x021D1A
0x021EBA
0x021F85
0x0223D5
0x022456
0x0225B4
0x022600
0x022700
0x022800
0x022900
0x022A00
0x022B00
0x022C00
0x022D00
0x022E00
0x022F00
0x023000
0x023102
0x023295
0x023302
0x0234F9
0x023500
0x023600
0x023700
0x023800
0x023900
0x023A18
0x023B19
0x023C19
0x023D08
0x023E00
0x023F00
0x024000
0x024108
0x024200
0x024300
0x024400
0x024511
0x024607
0x024705
0x024817
0x024964
0x024A01
0x024B22
0x024C01
0x024D85
0x024E03
0x024F09
0x025001
0x025192
0x02520D
0x025342
0x025401
0x025540
0x025600
0x02570A
0x025814
0x025908
0x025A08
0x025B12
0x025C14
0x025D07
0x025E3F
0x025F0F
0x026000
0x026100
0x026600
0x02674A
0x026881
0x02697C
0x026A80
0x026B00
0x026C00
0x026D00
0x026E00
0x026F00
0x027000
0x027100
0x027200
0x027300
0x027400
0x027500
0x027600
0x027700
0x027807
0x0279AE
0x027A14
0x027B7A
0x027CE1
0x027D47
0x027EAE
0x027FFF
0x0280FF
0x0281FF
0x0282FF
0x0283FF
0x028400
0x028502
0x028600
0x028700
0x028800
0x028900
0x028A00
0x028B00
0x028C00
0x02920C
0x029300
0x029401
0x029500
0x029601
0x029B00
0x029C00
0x029D01
0x029E01
0x02C36D
0x02C403
0x02C509
0x02C63C
0x02C73C
0x02C8FF
0x02C900
0x02CA03
0x02CB10
0x02CC00
0x02CDCB
0x02CE44
0x02CF73
0x02D055
0x02D155
0x02D255
0x02D355
0x02D437
0x02DBE1
0x02DCA0
0x02DDBD
0x02E000
0x02EA01
0x030506
0x030922
0x030A09
0x030B07
0x030C02
0x030D02
0x030EFF
0x030F00
0x031003
0x031110
0x031200
0x0313F2
0x03140D
0x031595
0x0316C2
0x031780
0x031804
0x031900
0x031A06
0x032340
0x032420
0x032500
0x032800
0x033200
0x033301
0x034822
0x034915
0x034A01
0x034B3F
0x034C3F
0x034DFF
0x034E00
0x034F03
0x035010
0x035100
0x035265
0x035316
0x0354B9
0x0355AA
0x0356AA
0x0357AA
0x0358AB
0x035905
0x0360FC
0x0361BE
0x036204
0x036800
0x03C703
0x03C800
0x03C933
0x03CB1B
0x03CC00
0x03CD3F
0x03CE00
0x03CF00
0x03D000
0x03D100
0x03D200
0x03D30A
0x03D400
0x03D50A
0x03D600
0x03D705
0x03D800
0x03D900
0x03DA00
0x03DBFA
0x03DC00
0x03DD00
0x03DE00
0x03DF00
0x04020F
0x040308
0x040400
0x040500
0x040600
0x040732
0x042200
0x042308
0x042400
0x042500
0x042600
0x042732
0x044531
0x044623
0x044700
0x044800
0x044900
0x044A32
0x044B00
0x044C05
0x044D00
0x044E00
0x044F00
0x0450FA
0x045100
0x045200
0x045300
0x045410
0x046530
0x046620
0x046700
0x046800
0x046900
0x046A32
0x046B00
0x046C05
0x046D00
0x046E00
0x046F00
0x0470FA
0x047100
0x047200
0x047300
0x047410
0x048530
0x048620
0x048700
0x048800
0x048909
0x048AC4
0x048B00
0x048C05
0x048D00
0x048E03
0x048F0D
0x049040
0x049100
0x049200
0x049301
0x049400
0x04A531
0x04A623
0x04A700
0x04A800
0x04A909
0x04AAC4
0x04AB00
0x04AC15
0x04AD00
0x04AE03
0x04AF0D
0x04B040
0x04B100
0x04B200
0x04B301
0x04B400
0x04C531
0x04C623
0x04C700
0x04C800
0x04C909
0x04CAC4
0x04CB00
0x04CC15
0x04CD00
0x04CE03
0x04CF0D
0x04D040
0x04D100
0x04D200
0x04D305
0x04D400
0x04E200
0x04E308
0x04E400
0x04E500
0x04E60E
0x04E7E6
0x050200
0x050308
0x050400
0x050500
0x05060E
0x0507E6

# Step 3. Perform a software reset (SWRST bit = 1, then SWRST bit = 0).
0x001740
0x001700

# Step 4. Wait for the APLL to lock before asserting SYNC_EN and SYNC_SW.
# Note: block("0==LOL_PLLx", timeout_seconds=1) is a function that polls for the given APLL for the locked condition.
# The 0 above means that the APLL is locked, 1 means the APLL is unlocked.
# The " around the condition are REQUIRED for function operation - the condition must be in quoation marks.
# There is a one second timeout window in this function within which the APLL can lock.
# If the APLL does not lock within this window, the write operation does not continue.
# If implemented in an FPGA, a function would have to be created to handle this task.
# Alternatively, instead of using block("0==LOL_PLLx", timeout_seconds=1), use open_loop_delay(seconds=1).
# The function open_loop_delay(seconds=1) is simply a 1 second delay, after which writes continue.
# The delay time is configurable, i.e. open_loop_delay(seconds=2) will delay for 2 seconds
# If an APLL is not being used (eg. APLL1 disabled), then simply do not poll that LOL bit, as it will be set, but its state does not actually matter.
# open_loop_delay(seconds=1)
block("0==LOL_PLL1", timeout_seconds=1)
block("0==LOL_PLL2", timeout_seconds=1)

# Step 5: Assert SYNC by writing SYNC_EN = 1, then SYNC_SW = 1.
0x001901
0x0015e1

# Step 6. Write the output registers to their proper states.
0x03c14e
0x03c234
0x03c328
0x03c44e
0x03c534
0x03c614
0x04004e
0x040103
0x04200e
0x042103
0x04414e
0x04420c
0x04434e
0x04440c
0x04610e
0x04620c
0x04630e
0x04640c
0x04810e
0x048208
0x04830e
0x048408
0x04a14e
0x04a208
0x04a34e
0x04a408
0x04c14e
0x04c208
0x04c34e
0x04c408
0x04e00e
0x04e103
0x05000e
0x050103

# Step 7: Dessert SYNC by writing SYNC_SW = 0, then SYNC_EN = 0 (SYNC_EN = 0 not required).
0x0015a1
0x001900
